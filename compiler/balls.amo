var count
var ballArray

struct ball { x,y,xi,yi,colour }

func times.16() {
	<< << << <<
}

proc ball.draw(char) {
	var addr
	ball.r_x() << !addr
	ball.r_y() times.16() times.16() +addr !addr
	poke.v(0,addr,char)
	poke.v(0,addr+1,ball.r_colour())
}

proc ball.x_flip() {
	ball.w_xi(neg(ball.r_xi())) 
}

proc ball.y_flip() {
	ball.w_yi(neg(ball.r_yi())) 
}

proc ball.move() {
	var t
	ball.draw(32)
	ball.r_x() !t ball.r_xi() +t !t
	if (t==79) { ball.x_flip() }
	if (t==0) { ball.x_flip() }
	ball.w_x(t)

	ball.r_y() !t ball.r_yi() +t !t
	if (t==59) { ball.y_flip() }
	if (t==0) { ball.y_flip() }
	ball.w_y(t)
	ball.draw(42)
}

proc ball.initialise() {
	ball.w_x(random() % 68 ++) 
	ball.w_y(random() % 48 ++)
	ball.w_xi(sgn(random()))
	ball.w_yi(sgn(random()))
	ball.w_colour(random() % 15 ++)
}

slow proc main() {
	var i,a,ptr,frames
	print.character(144);print.character(1);print.character(147);print.character(142)
	print.character(129)
	32 !count
	<< alloc(~) !ballArray  
	times(count,i) {
		poke.w(i << +ballArray,ball.new())
		ball.initialise()
	}

	times(55555) {
		times(count,i) {
			  ball.use(peek.w(i << +ballArray)) ball.move()
		}
	  frames ++ !frames
	  if (frames & 15 == 0) {
		  print.character(19)	 
		  print.int(frames)
		}
	}	
}