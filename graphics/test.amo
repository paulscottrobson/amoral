code proc graphic.data() {
[["000000000000000000000000000000000888888888880000000000000000000000000000000000000000000000000888888888881118880000000000000000000000000000000000000000000888888888881111111118000000000000000000000000000000000000000088888888111111111111111180000000000000000000000000000000000000888888811111111111111111118000000000000000000000000000000000000088811111111111118888888111800000000000000000000000000000000000088811111111111188333777881180000000000000000000000000000000000888811111111111188333377778118000000000000000000000000000000008888811111111111118bbb3377778118000000000000000000000000000008888888111111111111118bbbbbbb7888888888000000000000000000000008888881111111111111111118bbbb88888888888888000000000000000000000888111111111111111111111888888888888888888880000000000000000000088111111111111111111888888888888888888888888800000000000000000088811111111111111188888888888888888888888888888000000000000000008881111111111111188888888888888888888888888888800000000000000000881111111111111188888888888888888888888888888880000000000000000008811111111111888888888888888888b8888888888888800000000000000000088111111188888888888888888bb888b800000000000000000000000000000000881111888888888888bbb8888bb888b800000000000000000000000000000000881188888888888bbbbbb8888bb888b800000000000000000000000000000000888888888888bbbbbbbbf8888ff888f8000000000000000000000000000000008888888888bbbffffffff8888ff888f8000000000000000000000000000000088bbf88888bffffffffffff88fff88ff800088800000000000000000000000008bbbf88888bbffffffffffffffffffff88888ff88800000000000000000000088bbfff88888bbfffffffffff8bfffff88ffffffff880000000000000000000088bbfff888888888ffffffff88bbfffffffffffffff80000000000000000000088bbfff8888888888fffffff888bbbfffffffffffff88000000000000000000088bbfff8888888888fffffff888bbbbfffffffffffff8000000000000000000088bbfff888888888ffffffff88888bbbbfffffffffff80000000000000000000888bbff88888bbfffffffff888888bbbbbbfffffffff80000000000000000000088bbff888888bbffffffff888888888bbbbbfffffff800000000000000000000888bbff88888bbffffffff88888888888bbbbbbbbb8000000000000000000000088888888888bbffffffff8888888888888bbbbbb88000000000000000000000000000000888bbbbffffff888888888888888888888000000000000000000000000000000888bbbbbffffff8888888888888888888800000000000000000000000000000008888bbbbbffff888888888888888888800000000000000000000000000000000888888bbbbbffffff88888888888888800000000000000000000000000000088888888888bbbfffffff8888888888888000000000000000000000000000088881111188888888ffffffffff888888000000000000000000000000000000088811111111188888888ffffffff8000000000000000000000000000000000088811111111118188888888888888800000000000000000000000000000000008811111111111181188888888888800000000000000000000000000000000000881111111111118118e668111888800000000000000000000000000000000000881111111111118118e668881886688000000000000000000000000000000000881111111111118118e888888666888800000000000000000000000000000000881111111111118188883388666683380000000000000000000000000000000088111111111111888e8773386666873880000000000000000000000000000000888111111111118eee8773386666873380000000000000000000000000000000088881111111118eee877bb866668bbb80000000000000000000000000000000088788888888118eee88bb886666888880000000000000000000000000000000088777777778888eeee888866666688880000000000000000000000000000000088777777777778eeeeee6666666666680000000000000000000000000000000088777777777778eeeeee6666666666680000000000000000000000000000000088777777777778eeeeeee666666666680000000000000000000000000000000088777777777778eeeeeee66666666688000000000000000000000000000000008877777777778eeeeeeeeee666666680000000000000000000000000000000008887777777788eeeeeeeeee666666880000000000000000000000000000000000887778888888888888eeee6666888000000000000000000000000000000000008888888888888888888888888880000000000000000000000000000000000000088888888888888888888888888000000000000000000000000000000000000000088888888888888cc888888c880000000000000000000000000000000000000088888888888888ccc888888cc88000000000000000000000000000000000000088888888888888cccc8888cccc880000000000000000000000000000000000008888888888888888888888888888000000000000000000000"]]
}

fast
proc load.vram(from,page,to,count) {
	times (count) {
		poke.v(page,to,peek.b(from))
		from ++ -> from
		to ++ -> to
	}
}

slow

proc load.data() {
	load.vram(@graphic.data,1,0,2048)
	load.vram(@default.palette,1,$FA00,32)
}

proc init.sprite(spr,y) {
	poke.vw(1,spr,$800)				# Address / 32 in first two bytes.
	poke.vw(1,spr+2,random() & $FF) # X
	poke.vw(1,spr+4,y)				# Y
	poke.v(1,spr+6,$0C)				# position 11, no flips.
	poke.v(1,spr+7,$F0) 			# 64x64 4 colour

}

const MARIO.COUNT 40
const MARIO.GAP 4

proc main() {
	var n

	print.character($90)
	print.character(1)
	print.character(147)

	poke.b($9f29,$61)				# layer 2 on sprites on
	poke.b($9f2a,$40)				# double normal scale
	poke.b($9f2b,$40)

	load.data()

	times(16,n) {
		poke.v(0,n<<,$2A)
		poke.v(0,n<<++,n)
	}

	times(MARIO.COUNT,n) {
		init.sprite(n << << << + $FC00,n*MARIO.GAP)
	}

	var x,xa
	while (0 == 0) {
		times(MARIO.COUNT,n) {
			n << << << + $FC02 -> xa
			peek.v(1,xa) -> x
			poke.v(1,xa,n & 3 + x ++)
		}
		x ++ & $FF -> x
	}
}
